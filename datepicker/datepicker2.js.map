{"version":3,"file":"datepicker2.js","sourceRoot":"","sources":["../../../src/lib/datepicker/datepicker2.ts"],"names":[],"mappings":"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","sourcesContent":["import {\r\n  AfterContentInit,\r\n  ChangeDetectionStrategy,\r\n  Component,\r\n  ComponentRef,\r\n  EventEmitter,\r\n  Input,\r\n  OnDestroy,\r\n  Optional,\r\n  Output,\r\n  ViewChild,\r\n  ViewContainerRef,\r\n  ViewEncapsulation,\r\n  NgZone,\r\n} from '@angular/core';\r\nimport { Overlay } from '../core/overlay/overlay';\r\nimport { OverlayRef } from '../core/overlay/overlay-ref';\r\nimport { ComponentPortal } from '../core/portal/portal';\r\nimport { OverlayState } from '../core/overlay/overlay-state';\r\nimport { Dir } from '../core/rtl/dir';\r\nimport { PositionStrategy } from '../core/overlay/position/position-strategy';\r\nimport { RepositionScrollStrategy, ScrollDispatcher } from '../core/overlay/index';\r\nimport { Md2DatepickerInput } from './datepicker-input';\r\nimport { Subscription } from 'rxjs/Subscription';\r\nimport { DateAdapter } from '../core/datetime/index';\r\nimport { ESCAPE } from '../core/keyboard/keycodes';\r\nimport { Md2Calendar } from './calendar';\r\nimport 'rxjs/add/operator/first';\r\n\r\n\r\n/** Used to generate a unique ID for each datepicker instance. */\r\nlet datepickerUid = 0;\r\n\r\n\r\n/**\r\n * Component used as the content for the datepicker dialog and popup. We use this instead of using\r\n * Md2Calendar directly as the content so we can control the initial focus. This also gives us a\r\n * place to put additional features of the popup that are not part of the calendar itself in the\r\n * future. (e.g. confirmation buttons).\r\n * @docs-private\r\n */\r\n@Component({\r\n  moduleId: module.id,\r\n  selector: 'md2-datepicker-content',\r\n  templateUrl: 'datepicker-content.html',\r\n  styleUrls: ['datepicker-content.css'],\r\n  host: {\r\n    'class': 'md2-datepicker-content',\r\n    '[class.md2-datepicker-content-touch]': 'datepicker.touchUi',\r\n    '(keydown)': '_handleKeydown($event)',\r\n  },\r\n  encapsulation: ViewEncapsulation.None,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class Md2DatepickerContent<D> implements AfterContentInit {\r\n  datepicker: Md2Datepicker2<D>;\r\n\r\n  @ViewChild(Md2Calendar) _calendar: Md2Calendar<D>;\r\n\r\n  ngAfterContentInit() {\r\n    this._calendar._focusActiveCell();\r\n  }\r\n\r\n  /**\r\n   * Handles keydown event on datepicker content.\r\n   * @param event The event.\r\n   */\r\n  _handleKeydown(event: KeyboardEvent): void {\r\n    switch (event.keyCode) {\r\n      case ESCAPE:\r\n        this.datepicker.close();\r\n        break;\r\n      default:\r\n        // Return so that we don't preventDefault on keys that are not explicitly handled.\r\n        return;\r\n    }\r\n\r\n    event.preventDefault();\r\n  }\r\n}\r\n\r\n\r\n// TODO(mmalerba): We use a component instead of a directive here so the user can use implicit\r\n// template reference variables (e.g. #d vs #d=\"md2Datepicker\"). We can change this to a directive if\r\n// angular adds support for `exportAs: '$implicit'` on directives.\r\n/** Component responsible for managing the datepicker popup/dialog. */\r\n@Component({\r\n  moduleId: module.id,\r\n  selector: 'md2-datepicker2',\r\n  template: '<ng-content></ng-content>',\r\n})\r\nexport class Md2Datepicker2<D> implements OnDestroy {\r\n  /** The date to open the calendar to initially. */\r\n  @Input()\r\n  get startAt(): D {\r\n    // If an explicit startAt is set we start there, otherwise we start at whatever the currently\r\n    // selected value is.\r\n    return this._startAt || (this._datepickerInput ? this._datepickerInput.value : null);\r\n  }\r\n  set startAt(date: D) { this._startAt = date; }\r\n  private _startAt: D;\r\n\r\n  /** The view that the calendar should start in. */\r\n  @Input() startView: 'month' | 'year' = 'month';\r\n\r\n  /**\r\n   * Whether the calendar UI is in touch mode. In touch mode the calendar opens in a dialog rather\r\n   * than a popup and elements have more padding to allow for bigger touch targets.\r\n   */\r\n  @Input() touchUi = false;\r\n\r\n  /** Emits new selected date when selected date changes. */\r\n  @Output() selectedChanged = new EventEmitter<D>();\r\n\r\n  /** Whether the calendar is open. */\r\n  opened = false;\r\n\r\n  /** The id for the datepicker calendar. */\r\n  id = `md2-datepicker-${datepickerUid++}`;\r\n\r\n  /** The currently selected date. */\r\n  _selected: D = null;\r\n\r\n  /** The minimum selectable date. */\r\n  get _minDate(): D {\r\n    return this._datepickerInput && this._datepickerInput.min;\r\n  }\r\n\r\n  /** The maximum selectable date. */\r\n  get _maxDate(): D {\r\n    return this._datepickerInput && this._datepickerInput.max;\r\n  }\r\n\r\n  get _dateFilter(): (date: D | null) => boolean {\r\n    return this._datepickerInput && this._datepickerInput._dateFilter;\r\n  }\r\n\r\n  /** A reference to the overlay when the calendar is opened as a popup. */\r\n  private _popupRef: OverlayRef;\r\n\r\n  /** A reference to the overlay when the calendar is opened as a dialog. */\r\n  private _dialogRef: OverlayRef;\r\n\r\n  /** A portal containing the calendar for this datepicker. */\r\n  private _calendarPortal: ComponentPortal<Md2DatepickerContent<D>>;\r\n\r\n  /** The input element this datepicker is associated with. */\r\n  private _datepickerInput: Md2DatepickerInput<D>;\r\n\r\n  private _inputSubscription: Subscription;\r\n\r\n  constructor(private _overlay: Overlay,\r\n    private _ngZone: NgZone,\r\n    private _viewContainerRef: ViewContainerRef,\r\n    private _scrollDispatcher: ScrollDispatcher,\r\n    @Optional() private _dateAdapter: DateAdapter<D>,\r\n    @Optional() private _dir: Dir) {\r\n    if (!this._dateAdapter) {\r\n      throw Error('DateAdapter');\r\n    }\r\n\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.close();\r\n    if (this._popupRef) {\r\n      this._popupRef.dispose();\r\n    }\r\n    if (this._dialogRef) {\r\n      this._dialogRef.dispose();\r\n    }\r\n    if (this._inputSubscription) {\r\n      this._inputSubscription.unsubscribe();\r\n    }\r\n  }\r\n\r\n  /** Selects the given date and closes the currently open popup or dialog. */\r\n  _selectAndClose(date: D): void {\r\n    let oldValue = this._selected;\r\n    this._selected = date;\r\n    if (!this._dateAdapter.sameDate(oldValue, this._selected)) {\r\n      this.selectedChanged.emit(date);\r\n    }\r\n    this.close();\r\n  }\r\n\r\n  /**\r\n   * Register an input with this datepicker.\r\n   * @param input The datepicker input to register with this datepicker.\r\n   */\r\n  _registerInput(input: Md2DatepickerInput<D>): void {\r\n    if (this._datepickerInput) {\r\n      throw new Error('An Md2Datepicker can only be associated with a single input.');\r\n    }\r\n    this._datepickerInput = input;\r\n    this._inputSubscription =\r\n      this._datepickerInput._valueChange.subscribe((value: D) => this._selected = value);\r\n  }\r\n\r\n  /** Open the calendar. */\r\n  open(): void {\r\n    if (this.opened) {\r\n      return;\r\n    }\r\n    if (!this._datepickerInput) {\r\n      throw new Error('Attempted to open an Md2Datepicker with no associated input.');\r\n    }\r\n\r\n    if (!this._calendarPortal) {\r\n      this._calendarPortal = new ComponentPortal(Md2DatepickerContent, this._viewContainerRef);\r\n    }\r\n\r\n    this.touchUi ? this._openAsDialog() : this._openAsPopup();\r\n    this.opened = true;\r\n  }\r\n\r\n  /** Close the calendar. */\r\n  close(): void {\r\n    if (!this.opened) {\r\n      return;\r\n    }\r\n    if (this._popupRef && this._popupRef.hasAttached()) {\r\n      this._popupRef.detach();\r\n    }\r\n    if (this._dialogRef && this._dialogRef.hasAttached()) {\r\n      this._dialogRef.detach();\r\n    }\r\n    if (this._calendarPortal && this._calendarPortal.isAttached) {\r\n      this._calendarPortal.detach();\r\n    }\r\n    this.opened = false;\r\n  }\r\n\r\n  /** Open the calendar as a dialog. */\r\n  private _openAsDialog(): void {\r\n    if (!this._dialogRef) {\r\n      this._createDialog();\r\n    }\r\n\r\n    if (!this._dialogRef.hasAttached()) {\r\n      let componentRef: ComponentRef<Md2DatepickerContent<D>> =\r\n        this._dialogRef.attach(this._calendarPortal);\r\n      componentRef.instance.datepicker = this;\r\n    }\r\n\r\n    this._dialogRef.backdropClick().first().subscribe(() => this.close());\r\n  }\r\n\r\n  /** Open the calendar as a popup. */\r\n  private _openAsPopup(): void {\r\n    if (!this._popupRef) {\r\n      this._createPopup();\r\n    }\r\n\r\n    if (!this._popupRef.hasAttached()) {\r\n      let componentRef: ComponentRef<Md2DatepickerContent<D>> =\r\n        this._popupRef.attach(this._calendarPortal);\r\n      componentRef.instance.datepicker = this;\r\n\r\n      // Update the position once the calendar has rendered.\r\n      this._ngZone.onStable.first().subscribe(() => this._popupRef.updatePosition());\r\n    }\r\n\r\n    this._popupRef.backdropClick().first().subscribe(() => this.close());\r\n  }\r\n\r\n  /** Create the dialog. */\r\n  private _createDialog(): void {\r\n    const overlayState = new OverlayState();\r\n    overlayState.positionStrategy = this._overlay.position().global()\r\n      .centerHorizontally()\r\n      .centerVertically();\r\n    overlayState.hasBackdrop = true;\r\n    overlayState.backdropClass = 'cdk-overlay-dark-backdrop';\r\n    overlayState.direction = this._dir ? this._dir.value : 'ltr';\r\n    this._dialogRef = this._overlay.create(overlayState);\r\n  }\r\n\r\n  /** Create the popup. */\r\n  private _createPopup(): void {\r\n    const overlayState = new OverlayState();\r\n    overlayState.positionStrategy = this._createPopupPositionStrategy();\r\n    overlayState.hasBackdrop = true;\r\n    if (this.touchUi) {\r\n      overlayState.backdropClass = 'cdk-overlay-dark-backdrop';\r\n    } else {\r\n      overlayState.backdropClass = 'cdk-overlay-transparent-backdrop';\r\n    }\r\n    overlayState.direction = this._dir ? this._dir.value : 'ltr';\r\n    overlayState.scrollStrategy = new RepositionScrollStrategy(this._scrollDispatcher);\r\n\r\n    this._popupRef = this._overlay.create(overlayState);\r\n  }\r\n\r\n  /** Create the popup PositionStrategy. */\r\n  private _createPopupPositionStrategy(): PositionStrategy {\r\n    return this._overlay.position()\r\n      .connectedTo(this._datepickerInput.getPopupConnectionElementRef(),\r\n      { originX: 'start', originY: 'bottom' },\r\n      { overlayX: 'start', overlayY: 'top' }\r\n      )\r\n      .withFallbackPosition(\r\n      { originX: 'start', originY: 'top' },\r\n      { overlayX: 'start', overlayY: 'bottom' }\r\n      )\r\n      .withFallbackPosition(\r\n      { originX: 'end', originY: 'bottom' },\r\n      { overlayX: 'end', overlayY: 'top' }\r\n      )\r\n      .withFallbackPosition(\r\n      { originX: 'end', originY: 'top' },\r\n      { overlayX: 'end', overlayY: 'bottom' }\r\n      );\r\n  }\r\n}\r\n"]}