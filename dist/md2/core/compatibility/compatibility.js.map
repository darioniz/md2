{"version":3,"file":"compatibility.js","sourceRoot":"","sources":["../../../../src/lib/core/compatibility/compatibility.ts"],"names":[],"mappings":";;;;;;;;;;;;AAAA,OAAO,EACL,QAAQ,EACR,SAAS,EACT,MAAM,EACN,QAAQ,EACR,SAAS,EACT,UAAU,EACV,cAAc,GACf,MAAM,eAAe,CAAC;AACvB,OAAO,EAAC,QAAQ,EAAC,MAAM,2BAA2B,CAAC;AAEnD,MAAM,CAAC,IAAM,2BAA2B,GAAG,IAAI,cAAc,CAAU,uBAAuB,CAAC,CAAC;AAEhG,sFAAsF;AACtF,MAAM,CAAC,IAAM,sBAAsB,GAAG,IAAI,cAAc,CAAU,kBAAkB,CAAC,CAAC;AAEtF;;;;GAIG;AACH,MAAM,+CAA+C,MAAc,EAAE,QAAgB;IACnF,MAAM,CAAC,IAAI,KAAK,CAAC,WAAQ,MAAM,qEAAiE;SAC/E,yBAAsB,QAAQ,CAAC,WAAW,EAAE,gBAAY,CAAA,CAAC,CAAC;AAC7E,CAAC;AAED,iGAAiG;AACjG,MAAM,CAAC,IAAM,qBAAqB,GAAG,ooCA2DzB,CAAC;AAEb,iGAAiG;AACjG,MAAM,CAAC,IAAM,oBAAoB,GAAG,ykCA2DzB,CAAC;AAEZ,qEAAqE;AAErE,IAAa,iBAAiB;IAC5B,2BACmD,mBAA4B,EAC7E,UAAsB;QAEtB,EAAE,CAAC,CAAC,CAAC,mBAAmB,CAAC,CAAC,CAAC;YACzB,MAAM,oCAAoC,CAAC,KAAK,EAAE,UAAU,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;QACvF,CAAC;IACH,CAAC;IACH,wBAAC;AAAD,CAAC,AATD,IASC;AATY,iBAAiB;IAD7B,SAAS,CAAC,EAAC,QAAQ,EAAE,qBAAqB,EAAC,CAAC;IAGxC,WAAA,QAAQ,EAAE,CAAA,EAAE,WAAA,MAAM,CAAC,2BAA2B,CAAC,CAAA;8CACpC,UAAU;GAHb,iBAAiB,CAS7B;SATY,iBAAiB;AAW9B,oEAAoE;AAEpE,IAAa,gBAAgB;IAC3B,0BACmD,mBAA4B,EAC7E,UAAsB;QAEtB,EAAE,CAAC,CAAC,mBAAmB,CAAC,CAAC,CAAC;YACxB,MAAM,oCAAoC,CAAC,IAAI,EAAE,UAAU,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;QACtF,CAAC;IACH,CAAC;IACH,uBAAC;AAAD,CAAC,AATD,IASC;AATY,gBAAgB;IAD5B,SAAS,CAAC,EAAC,QAAQ,EAAE,oBAAoB,EAAC,CAAC;IAGvC,WAAA,QAAQ,EAAE,CAAA,EAAE,WAAA,MAAM,CAAC,2BAA2B,CAAC,CAAA;8CACpC,UAAU;GAHb,gBAAgB,CAS5B;SATY,gBAAgB;AAY7B;;;;GAIG;AAQH,IAAa,mBAAmB;IAI9B,6BACwC,SAAc,EACR,oBAA6B;QADnC,cAAS,GAAT,SAAS,CAAK;QAJtD,gGAAgG;QACxF,yBAAoB,GAAG,KAAK,CAAC;QAMnC,EAAE,CAAC,CAAC,oBAAoB,IAAI,CAAC,IAAI,CAAC,oBAAoB,IAAI,SAAS,IAAI,SAAS,EAAE,CAAC,CAAC,CAAC;YACnF,4EAA4E;YAC5E,IAAI,CAAC,aAAa,EAAE,CAAC;YACrB,IAAI,CAAC,WAAW,EAAE,CAAC;YACnB,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC;QACnC,CAAC;IACH,CAAC;IAEO,2CAAa,GAArB;QACE,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,CAAC;YAC5B,OAAO,CAAC,IAAI,CACV,2DAA2D;gBAC3D,6DAA6D,CAC9D,CAAC;QACJ,CAAC;IACH,CAAC;IAEO,yCAAW,GAAnB;QACE,EAAE,CAAC,CAAC,OAAO,gBAAgB,KAAK,UAAU,CAAC,CAAC,CAAC;YAC3C,IAAM,WAAW,GAAG,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;YAExD,WAAW,CAAC,SAAS,CAAC,GAAG,CAAC,yBAAyB,CAAC,CAAC;YACrD,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,CAAC;YAE7C,EAAE,CAAC,CAAC,gBAAgB,CAAC,WAAW,CAAC,CAAC,OAAO,KAAK,MAAM,CAAC,CAAC,CAAC;gBACrD,OAAO,CAAC,IAAI,CACV,4DAA4D;oBAC5D,2DAA2D;oBAC3D,iEAAiE,CAClE,CAAC;YACJ,CAAC;YAED,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,CAAC;QAC/C,CAAC;IACH,CAAC;IACH,0BAAC;AAAD,CAAC,AA3CD,IA2CC;AA3CY,mBAAmB;IAP/B,QAAQ,CAAC;QACR,YAAY,EAAE,CAAC,iBAAiB,EAAE,gBAAgB,CAAC;QACnD,OAAO,EAAE,CAAC,iBAAiB,EAAE,gBAAgB,CAAC;QAC9C,SAAS,EAAE,CAAC;gBACV,OAAO,EAAE,sBAAsB,EAAE,QAAQ,EAAE,IAAI;aAChD,CAAC;KACH,CAAC;IAMG,WAAA,QAAQ,EAAE,CAAA,EAAE,WAAA,MAAM,CAAC,QAAQ,CAAC,CAAA;IAC5B,WAAA,QAAQ,EAAE,CAAA,EAAE,WAAA,MAAM,CAAC,sBAAsB,CAAC,CAAA;;GANlC,mBAAmB,CA2C/B;SA3CY,mBAAmB;AA8ChC;;;GAGG;AAMH,IAAa,gCAAgC;IAA7C;IAA+C,CAAC;IAAD,uCAAC;AAAD,CAAC,AAAhD,IAAgD;AAAnC,gCAAgC;IAL5C,QAAQ,CAAC;QACR,SAAS,EAAE,CAAC;gBACV,OAAO,EAAE,2BAA2B,EAAE,QAAQ,EAAE,IAAI;aACrD,CAAC;KACH,CAAC;GACW,gCAAgC,CAAG;SAAnC,gCAAgC","sourcesContent":["import {\r\n  NgModule,\r\n  Directive,\r\n  Inject,\r\n  Optional,\r\n  isDevMode,\r\n  ElementRef,\r\n  InjectionToken,\r\n} from '@angular/core';\r\nimport {DOCUMENT} from '@angular/platform-browser';\r\n\r\nexport const MATERIAL_COMPATIBILITY_MODE = new InjectionToken<boolean>('md-compatibility-mode');\r\n\r\n/** Injection token that configures whether the Material sanity checks are enabled. */\r\nexport const MATERIAL_SANITY_CHECKS = new InjectionToken<boolean>('md-sanity-checks');\r\n\r\n/**\r\n * Returns an exception to be thrown if the consumer has used\r\n * an invalid Material prefix on a component.\r\n * @docs-private\r\n */\r\nexport function getMdCompatibilityInvalidPrefixError(prefix: string, nodeName: string) {\r\n  return new Error(`The \"${prefix}-\" prefix cannot be used in ng-material v1 compatibility mode. ` +\r\n                   `It was used on an \"${nodeName.toLowerCase()}\" element.`);\r\n}\r\n\r\n/** Selector that matches all elements that may have style collisions with AngularJS Material. */\r\nexport const MAT_ELEMENTS_SELECTOR = `\r\n  [mat-button],\r\n  [mat-card-subtitle],\r\n  [mat-card-title],\r\n  [mat-dialog-actions],\r\n  [mat-dialog-close],\r\n  [mat-dialog-content],\r\n  [mat-dialog-title],\r\n  [mat-fab],\r\n  [mat-icon-button],\r\n  [mat-menu-trigger-for],\r\n  [mat-mini-fab],\r\n  [mat-raised-button],\r\n  [mat-tab-label],\r\n  [mat-tab-link],\r\n  [mat-tab-nav-bar],\r\n  [matTooltip],\r\n  mat-autocomplete,\r\n  mat-button-toggle,\r\n  mat-button-toggle-group,\r\n  mat-button-toggle,\r\n  mat-card,\r\n  mat-card-actions,\r\n  mat-card-content,\r\n  mat-card-footer,\r\n  mat-card-header,\r\n  mat-card-subtitle,\r\n  mat-card-title,\r\n  mat-card-title-group,\r\n  mat-checkbox,\r\n  mat-chip,\r\n  mat-dialog-actions,\r\n  mat-dialog-container,\r\n  mat-dialog-content,\r\n  mat-divider,\r\n  mat-grid-list,\r\n  mat-grid-tile,\r\n  mat-grid-tile-footer,\r\n  mat-grid-tile-header,\r\n  mat-hint,\r\n  mat-icon,\r\n  mat-list,\r\n  mat-list-item,\r\n  mat-menu,\r\n  mat-nav-list,\r\n  mat-option,\r\n  mat-placeholder,\r\n  mat-progress-bar,\r\n  mat-pseudo-checkbox,\r\n  mat-radio-button,\r\n  mat-radio-group,\r\n  mat-select,\r\n  mat-sidenav,\r\n  mat-sidenav-container,\r\n  mat-slider,\r\n  mat-spinner,\r\n  mat-tab,\r\n  mat-tab-group,\r\n  mat-toolbar,\r\n  mat-error`;\r\n\r\n/** Selector that matches all elements that may have style collisions with AngularJS Material. */\r\nexport const MD_ELEMENTS_SELECTOR = `\r\n  [md-button],\r\n  [md-card-subtitle],\r\n  [md-card-title],\r\n  [md-dialog-actions],\r\n  [md-dialog-close],\r\n  [md-dialog-content],\r\n  [md-dialog-title],\r\n  [md-fab],\r\n  [md-icon-button],\r\n  [md-menu-trigger-for],\r\n  [md-mini-fab],\r\n  [md-raised-button],\r\n  [md-tab-label],\r\n  [md-tab-link],\r\n  [md-tab-nav-bar],\r\n  [mdTooltip],\r\n  md-autocomplete,\r\n  md-button-toggle,\r\n  md-button-toggle-group,\r\n  md-button-toggle,\r\n  md-card,\r\n  md-card-actions,\r\n  md-card-content,\r\n  md-card-footer,\r\n  md-card-header,\r\n  md-card-subtitle,\r\n  md-card-title,\r\n  md-card-title-group,\r\n  md-checkbox,\r\n  md-chip,\r\n  md-dialog-actions,\r\n  md-dialog-container,\r\n  md-dialog-content,\r\n  md-divider,\r\n  md-grid-list,\r\n  md-grid-tile,\r\n  md-grid-tile-footer,\r\n  md-grid-tile-header,\r\n  md-hint,\r\n  md-icon,\r\n  md-list,\r\n  md-list-item,\r\n  md-menu,\r\n  md-nav-list,\r\n  md-option,\r\n  md-placeholder,\r\n  md-progress-bar,\r\n  md-pseudo-checkbox,\r\n  md-radio-button,\r\n  md-radio-group,\r\n  md-select,\r\n  md-sidenav,\r\n  md-sidenav-container,\r\n  md-slider,\r\n  md-spinner,\r\n  md-tab,\r\n  md-tab-group,\r\n  md-toolbar,\r\n  md-error`;\r\n\r\n/** Directive that enforces that the `mat-` prefix cannot be used. */\r\n@Directive({selector: MAT_ELEMENTS_SELECTOR})\r\nexport class MatPrefixRejector {\r\n  constructor(\r\n    @Optional() @Inject(MATERIAL_COMPATIBILITY_MODE) isCompatibilityMode: boolean,\r\n    elementRef: ElementRef) {\r\n\r\n    if (!isCompatibilityMode) {\r\n      throw getMdCompatibilityInvalidPrefixError('mat', elementRef.nativeElement.nodeName);\r\n    }\r\n  }\r\n}\r\n\r\n/** Directive that enforces that the `md-` prefix cannot be used. */\r\n@Directive({selector: MD_ELEMENTS_SELECTOR})\r\nexport class MdPrefixRejector {\r\n  constructor(\r\n    @Optional() @Inject(MATERIAL_COMPATIBILITY_MODE) isCompatibilityMode: boolean,\r\n    elementRef: ElementRef) {\r\n\r\n    if (isCompatibilityMode) {\r\n      throw getMdCompatibilityInvalidPrefixError('md', elementRef.nativeElement.nodeName);\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * Module that enforces the default compatibility mode settings. When this module is loaded\r\n * without NoConflictStyleCompatibilityMode also being imported, it will throw an error if\r\n * there are any uses of the `mat-` prefix.\r\n */\r\n@NgModule({\r\n  declarations: [MatPrefixRejector, MdPrefixRejector],\r\n  exports: [MatPrefixRejector, MdPrefixRejector],\r\n  providers: [{\r\n    provide: MATERIAL_SANITY_CHECKS, useValue: true,\r\n  }],\r\n})\r\nexport class CompatibilityModule {\r\n  /** Whether we've done the global sanity checks (e.g. a theme is loaded, there is a doctype). */\r\n  private _hasDoneGlobalChecks = false;\r\n\r\n  constructor(\r\n    @Optional() @Inject(DOCUMENT) private _document: any,\r\n    @Optional() @Inject(MATERIAL_SANITY_CHECKS) _sanityChecksEnabled: boolean) {\r\n\r\n    if (_sanityChecksEnabled && !this._hasDoneGlobalChecks && _document && isDevMode()) {\r\n      // Delay running the check to allow more time for the user's styles to load.\r\n      this._checkDoctype();\r\n      this._checkTheme();\r\n      this._hasDoneGlobalChecks = true;\r\n    }\r\n  }\r\n\r\n  private _checkDoctype(): void {\r\n    if (!this._document.doctype) {\r\n      console.warn(\r\n        'Current document does not have a doctype. This may cause ' +\r\n        'some Angular Material components not to behave as expected.'\r\n      );\r\n    }\r\n  }\r\n\r\n  private _checkTheme(): void {\r\n    if (typeof getComputedStyle === 'function') {\r\n      const testElement = this._document.createElement('div');\r\n\r\n      testElement.classList.add('mat-theme-loaded-marker');\r\n      this._document.body.appendChild(testElement);\r\n\r\n      if (getComputedStyle(testElement).display !== 'none') {\r\n        console.warn(\r\n          'Could not find Angular Material core theme. Most Material ' +\r\n          'components may not work as expected. For more info refer ' +\r\n          'to the theming guide: https://material.angular.io/guide/theming'\r\n        );\r\n      }\r\n\r\n      this._document.body.removeChild(testElement);\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * Module that enforces \"no-conflict\" compatibility mode settings. When this module is loaded,\r\n * it will throw an error if there are any uses of the `md-` prefix.\r\n */\r\n@NgModule({\r\n  providers: [{\r\n    provide: MATERIAL_COMPATIBILITY_MODE, useValue: true,\r\n  }],\r\n})\r\nexport class NoConflictStyleCompatibilityMode {}\r\n"]}