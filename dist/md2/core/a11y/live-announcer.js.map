{"version":3,"file":"live-announcer.js","sourceRoot":"","sources":["../../../../src/lib/core/a11y/live-announcer.ts"],"names":[],"mappings":";;;;;;;;;;;;AAAA,OAAO,EACL,UAAU,EACV,cAAc,EACd,QAAQ,EACR,MAAM,EACN,QAAQ,GACT,MAAM,eAAe,CAAC;AACvB,OAAO,EAAC,QAAQ,EAAC,MAAM,sBAAsB,CAAC;AAG9C,MAAM,CAAC,IAAM,4BAA4B,GAAG,IAAI,cAAc,CAAc,sBAAsB,CAAC,CAAC;AAMpG,IAAa,aAAa;IAIxB,uBACsD,YAAiB,EACnE,QAAkB;QACpB,qDAAqD;QACrD,EAAE,CAAC,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,CAAC;YACvB,yFAAyF;YACzF,4FAA4F;YAC5F,iEAAiE;YACjE,IAAI,CAAC,YAAY,GAAG,YAAY,IAAI,IAAI,CAAC,kBAAkB,EAAE,CAAC;QAChE,CAAC;IACH,CAAC;IAED;;;;OAIG;IACH,gCAAQ,GAAR,UAAS,OAAe,EAAE,UAAyC;QAAnE,iBAYC;QAZyB,2BAAA,EAAA,qBAAyC;QACjE,IAAI,CAAC,YAAY,CAAC,WAAW,GAAG,EAAE,CAAC;QAEnC,6EAA6E;QAC7E,IAAI,CAAC,YAAY,CAAC,YAAY,CAAC,WAAW,EAAE,UAAU,CAAC,CAAC;QAExD,iFAAiF;QACjF,wFAAwF;QACxF,2FAA2F;QAC3F,kEAAkE;QAClE,2CAA2C;QAC3C,UAAU,CAAC,cAAM,OAAA,KAAI,CAAC,YAAY,CAAC,WAAW,GAAG,OAAO,EAAvC,CAAuC,EAAE,GAAG,CAAC,CAAC;IACjE,CAAC;IAED,kDAAkD;IAClD,0CAAkB,GAAlB;QACE,EAAE,CAAC,CAAC,IAAI,CAAC,YAAY,IAAI,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,CAAC,CAAC;YACtD,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,WAAW,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;QAC9D,CAAC;IACH,CAAC;IAEO,0CAAkB,GAA1B;QACE,IAAI,MAAM,GAAG,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;QAE3C,MAAM,CAAC,SAAS,CAAC,GAAG,CAAC,qBAAqB,CAAC,CAAC;QAC5C,MAAM,CAAC,YAAY,CAAC,aAAa,EAAE,MAAM,CAAC,CAAC;QAC3C,MAAM,CAAC,YAAY,CAAC,WAAW,EAAE,QAAQ,CAAC,CAAC;QAE3C,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;QAElC,MAAM,CAAC,MAAM,CAAC;IAChB,CAAC;IAEH,oBAAC;AAAD,CAAC,AAtDD,IAsDC;AAtDY,aAAa;IADzB,UAAU,EAAE;IAMN,WAAA,QAAQ,EAAE,CAAA,EAAE,WAAA,MAAM,CAAC,4BAA4B,CAAC,CAAA;6CACvC,QAAQ;GANX,aAAa,CAsDzB;SAtDY,aAAa;AAwD1B,MAAM,0CACF,gBAA+B,EAAE,WAAgB,EAAE,QAAkB;IACvE,MAAM,CAAC,gBAAgB,IAAI,IAAI,aAAa,CAAC,WAAW,EAAE,QAAQ,CAAC,CAAC;AACtE,CAAC;AAED,MAAM,CAAC,IAAM,uBAAuB,GAAG;IACrC,yFAAyF;IACzF,OAAO,EAAE,aAAa;IACtB,IAAI,EAAE;QACJ,CAAC,IAAI,QAAQ,EAAE,EAAE,IAAI,QAAQ,EAAE,EAAE,aAAa,CAAC;QAC/C,CAAC,IAAI,QAAQ,EAAE,EAAE,IAAI,MAAM,CAAC,4BAA4B,CAAC,CAAC;QAC1D,QAAQ;KACT;IACD,UAAU,EAAE,+BAA+B;CAC5C,CAAC","sourcesContent":["import {\r\n  Injectable,\r\n  InjectionToken,\r\n  Optional,\r\n  Inject,\r\n  SkipSelf,\r\n} from '@angular/core';\r\nimport {Platform} from '../platform/platform';\r\n\r\n\r\nexport const LIVE_ANNOUNCER_ELEMENT_TOKEN = new InjectionToken<HTMLElement>('liveAnnouncerElement');\r\n\r\n/** Possible politeness levels. */\r\nexport type AriaLivePoliteness = 'off' | 'polite' | 'assertive';\r\n\r\n@Injectable()\r\nexport class LiveAnnouncer {\r\n\r\n  private _liveElement: Element;\r\n\r\n  constructor(\r\n      @Optional() @Inject(LIVE_ANNOUNCER_ELEMENT_TOKEN) elementToken: any,\r\n      platform: Platform) {\r\n    // Only do anything if we're on the browser platform.\r\n    if (platform.isBrowser) {\r\n      // We inject the live element as `any` because the constructor signature cannot reference\r\n      // browser globals (HTMLElement) on non-browser environments, since having a class decorator\r\n      // causes TypeScript to preserve the constructor signature types.\r\n      this._liveElement = elementToken || this._createLiveElement();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Announces a message to screenreaders.\r\n   * @param message Message to be announced to the screenreader\r\n   * @param politeness The politeness of the announcer element\r\n   */\r\n  announce(message: string, politeness: AriaLivePoliteness = 'polite'): void {\r\n    this._liveElement.textContent = '';\r\n\r\n    // TODO: ensure changing the politeness works on all environments we support.\r\n    this._liveElement.setAttribute('aria-live', politeness);\r\n\r\n    // This 100ms timeout is necessary for some browser + screen-reader combinations:\r\n    // - Both JAWS and NVDA over IE11 will not announce anything without a non-zero timeout.\r\n    // - With Chrome and IE11 with NVDA or JAWS, a repeated (identical) message won't be read a\r\n    //   second time without clearing and then using a non-zero delay.\r\n    // (using JAWS 17 at time of this writing).\r\n    setTimeout(() => this._liveElement.textContent = message, 100);\r\n  }\r\n\r\n  /** Removes the aria-live element from the DOM. */\r\n  _removeLiveElement() {\r\n    if (this._liveElement && this._liveElement.parentNode) {\r\n      this._liveElement.parentNode.removeChild(this._liveElement);\r\n    }\r\n  }\r\n\r\n  private _createLiveElement(): Element {\r\n    let liveEl = document.createElement('div');\r\n\r\n    liveEl.classList.add('cdk-visually-hidden');\r\n    liveEl.setAttribute('aria-atomic', 'true');\r\n    liveEl.setAttribute('aria-live', 'polite');\r\n\r\n    document.body.appendChild(liveEl);\r\n\r\n    return liveEl;\r\n  }\r\n\r\n}\r\n\r\nexport function LIVE_ANNOUNCER_PROVIDER_FACTORY(\r\n    parentDispatcher: LiveAnnouncer, liveElement: any, platform: Platform) {\r\n  return parentDispatcher || new LiveAnnouncer(liveElement, platform);\r\n}\r\n\r\nexport const LIVE_ANNOUNCER_PROVIDER = {\r\n  // If there is already a LiveAnnouncer available, use that. Otherwise, provide a new one.\r\n  provide: LiveAnnouncer,\r\n  deps: [\r\n    [new Optional(), new SkipSelf(), LiveAnnouncer],\r\n    [new Optional(), new Inject(LIVE_ANNOUNCER_ELEMENT_TOKEN)],\r\n    Platform,\r\n  ],\r\n  useFactory: LIVE_ANNOUNCER_PROVIDER_FACTORY\r\n};\r\n"]}