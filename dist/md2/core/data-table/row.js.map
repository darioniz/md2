{"version":3,"file":"row.js","sourceRoot":"","sources":["../../../../src/lib/core/data-table/row.ts"],"names":[],"mappings":";;;;;;;;;AAAA,OAAO,EACL,uBAAuB,EACvB,SAAS,EACT,SAAS,EACT,KAAK,EACL,WAAW,EACX,gBAAgB,EACjB,MAAM,eAAe,CAAC;AAGvB;;;GAGG;AAEH,IAAa,eAAe;IAG1B,yBAAmB,QAA0B;QAA1B,aAAQ,GAAR,QAAQ,CAAkB;IAAI,CAAC;IACpD,sBAAC;AAAD,CAAC,AAJD,IAIC;AAH2B;IAAzB,KAAK,CAAC,iBAAiB,CAAC;;gDAAmB;AADjC,eAAe;IAD3B,SAAS,CAAC,EAAC,QAAQ,EAAE,mBAAmB,EAAC,CAAC;qCAIZ,WAAW;GAH7B,eAAe,CAI3B;SAJY,eAAe;AAM5B;;;GAGG;AAEH,IAAa,SAAS;IAGpB,gFAAgF;IAChF,qCAAqC;IAErC,mBAAmB,QAA0B;QAA1B,aAAQ,GAAR,QAAQ,CAAkB;IAAI,CAAC;IACpD,gBAAC;AAAD,CAAC,AAPD,IAOC;AAN4B;IAA1B,KAAK,CAAC,kBAAkB,CAAC;;0CAAmB;AADlC,SAAS;IADrB,SAAS,CAAC,EAAC,QAAQ,EAAE,aAAa,EAAC,CAAC;qCAON,WAAW;GAN7B,SAAS,CAOrB;SAPY,SAAS;AAStB;;;GAGG;AAEH,IAAa,aAAa;IAgBxB,uBAAoB,cAAgC;QAAhC,mBAAc,GAAd,cAAc,CAAkB;QAClD,eAAa,CAAC,oBAAoB,GAAG,IAAI,CAAC;IAC5C,CAAC;IAED,gCAAQ,GAAR;QAAA,iBAIC;QAHC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,UAAA,IAAI;YACrB,KAAI,CAAC,cAAc,CAAC,kBAAkB,CAAC,IAAI,CAAC,QAAQ,EAAE,KAAI,CAAC,OAAO,CAAC,CAAC;QACtE,CAAC,CAAC,CAAC;IACL,CAAC;IACH,oBAAC;AAAD,CAAC,AAzBD,IAyBC;AAlBC;;;;;;GAMG;AACI,kCAAoB,GAAkB,IAAI,CAAC;AAdvC,aAAa;IADzB,SAAS,CAAC,EAAC,QAAQ,EAAE,iBAAiB,EAAC,CAAC;qCAiBH,gBAAgB;GAhBzC,aAAa,CAyBzB;SAzBY,aAAa;AA2B1B,8FAA8F;AAU9F,IAAa,YAAY;IAAzB;IAA4B,CAAC;IAAD,mBAAC;AAAD,CAAC,AAA7B,IAA6B;AAAhB,YAAY;IATxB,SAAS,CAAC;QACT,QAAQ,EAAE,gBAAgB;QAC1B,QAAQ,EAAE,6CAA6C;QACvD,IAAI,EAAE;YACJ,OAAO,EAAE,gBAAgB;YACzB,MAAM,EAAE,KAAK;SACd;QACD,eAAe,EAAE,uBAAuB,CAAC,MAAM;KAChD,CAAC;GACW,YAAY,CAAI;SAAhB,YAAY;AAEzB,gGAAgG;AAUhG,IAAa,MAAM;IAAnB;IAAsB,CAAC;IAAD,aAAC;AAAD,CAAC,AAAvB,IAAuB;AAAV,MAAM;IATlB,SAAS,CAAC;QACT,QAAQ,EAAE,SAAS;QACnB,QAAQ,EAAE,6CAA6C;QACvD,IAAI,EAAE;YACJ,OAAO,EAAE,SAAS;YAClB,MAAM,EAAE,KAAK;SACd;QACD,eAAe,EAAE,uBAAuB,CAAC,MAAM;KAChD,CAAC;GACW,MAAM,CAAI;SAAV,MAAM","sourcesContent":["import {\r\n  ChangeDetectionStrategy,\r\n  Component,\r\n  Directive,\r\n  Input,\r\n  TemplateRef,\r\n  ViewContainerRef\r\n} from '@angular/core';\r\nimport {CdkCellDef} from './cell';\r\n\r\n/**\r\n * Header row definition for the CDK data-table.\r\n * Captures the header row's template and other header properties such as the columns to display.\r\n */\r\n@Directive({selector: '[cdkHeaderRowDef]'})\r\nexport class CdkHeaderRowDef {\r\n  @Input('cdkHeaderRowDef') columns: string[];\r\n\r\n  constructor(public template: TemplateRef<any>) { }\r\n}\r\n\r\n/**\r\n * Data row definition for the CDK data-table.\r\n * Captures the header row's template and other row properties such as the columns to display.\r\n */\r\n@Directive({selector: '[cdkRowDef]'})\r\nexport class CdkRowDef {\r\n  @Input('cdkRowDefColumns') columns: string[];\r\n\r\n  // TODO(andrewseguin): Add an input for providing a switch function to determine\r\n  //   if this template should be used.\r\n\r\n  constructor(public template: TemplateRef<any>) { }\r\n}\r\n\r\n/**\r\n * Outlet for rendering cells inside of a row or header row.\r\n * @docs-private\r\n */\r\n@Directive({selector: '[cdkCellOutlet]'})\r\nexport class CdkCellOutlet {\r\n  /** The ordered list of cells to render within this outlet's view container */\r\n  cells: CdkCellDef[];\r\n\r\n  /** The data context to be provided to each cell */\r\n  context: any;\r\n\r\n  /**\r\n   * Static property containing the latest constructed instance of this class.\r\n   * Used by the CDK data-table when each CdkHeaderRow and CdkRow component is created using\r\n   * createEmbeddedView. After one of these components are created, this property will provide\r\n   * a handle to provide that component's cells and context. After init, the CdkCellOutlet will\r\n   * construct the cells with the provided context.\r\n   */\r\n  static mostRecentCellOutlet: CdkCellOutlet = null;\r\n\r\n  constructor(private _viewContainer: ViewContainerRef) {\r\n    CdkCellOutlet.mostRecentCellOutlet = this;\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.cells.forEach(cell => {\r\n      this._viewContainer.createEmbeddedView(cell.template, this.context);\r\n    });\r\n  }\r\n}\r\n\r\n/** Header template container that contains the cell outlet. Adds the right class and role. */\r\n@Component({\r\n  selector: 'cdk-header-row',\r\n  template: '<ng-container cdkCellOutlet></ng-container>',\r\n  host: {\r\n    'class': 'cdk-header-row',\r\n    'role': 'row',\r\n  },\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class CdkHeaderRow { }\r\n\r\n/** Data row template container that contains the cell outlet. Adds the right class and role. */\r\n@Component({\r\n  selector: 'cdk-row',\r\n  template: '<ng-container cdkCellOutlet></ng-container>',\r\n  host: {\r\n    'class': 'cdk-row',\r\n    'role': 'row',\r\n  },\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class CdkRow { }\r\n"]}