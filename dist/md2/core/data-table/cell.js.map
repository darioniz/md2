{"version":3,"file":"cell.js","sourceRoot":"","sources":["../../../../src/lib/core/data-table/cell.ts"],"names":[],"mappings":";;;;;;;;;AAAA,OAAO,EAAC,YAAY,EAAE,SAAS,EAAE,UAAU,EAAE,KAAK,EAAE,SAAS,EAAE,WAAW,EAAC,MAAM,eAAe,CAAC;AAEjG;;;GAGG;AAEH,IAAa,UAAU;IACrB,oBAAmB,QAA0B;QAA1B,aAAQ,GAAR,QAAQ,CAAkB;IAAI,CAAC;IACpD,iBAAC;AAAD,CAAC,AAFD,IAEC;AAFY,UAAU;IADtB,SAAS,CAAC,EAAC,QAAQ,EAAE,cAAc,EAAC,CAAC;qCAEP,WAAW;GAD7B,UAAU,CAEtB;SAFY,UAAU;AAIvB;;;GAGG;AAEH,IAAa,gBAAgB;IAC3B,0BAAmB,QAA0B;QAA1B,aAAQ,GAAR,QAAQ,CAAkB;IAAI,CAAC;IACpD,uBAAC;AAAD,CAAC,AAFD,IAEC;AAFY,gBAAgB;IAD5B,SAAS,CAAC,EAAC,QAAQ,EAAE,oBAAoB,EAAC,CAAC;qCAEb,WAAW;GAD7B,gBAAgB,CAE5B;SAFY,gBAAgB;AAI7B;;;GAGG;AAEH,IAAa,YAAY;IAAzB;IAKA,CAAC;IAAD,mBAAC;AAAD,CAAC,AALD,IAKC;AAJwB;IAAtB,KAAK,CAAC,cAAc,CAAC;;0CAAc;AAEV;IAAzB,YAAY,CAAC,UAAU,CAAC;8BAAO,UAAU;0CAAC;AACX;IAA/B,YAAY,CAAC,gBAAgB,CAAC;8BAAa,gBAAgB;gDAAC;AAJlD,YAAY;IADxB,SAAS,CAAC,EAAC,QAAQ,EAAE,gBAAgB,EAAC,CAAC;GAC3B,YAAY,CAKxB;SALY,YAAY;AAOzB,2EAA2E;AAQ3E,IAAa,aAAa;IACxB,uBAAoB,SAAuB,EACvB,UAAsB,EACtB,QAAmB;QAFnB,cAAS,GAAT,SAAS,CAAc;QACvB,eAAU,GAAV,UAAU,CAAY;QACtB,aAAQ,GAAR,QAAQ,CAAW;QACrC,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,UAAU,CAAC,aAAa,EAAE,gBAAc,SAAS,CAAC,IAAM,CAAC,CAAC;IACnF,CAAC;IACH,oBAAC;AAAD,CAAC,AAND,IAMC;AANY,aAAa;IAPzB,SAAS,CAAC;QACT,QAAQ,EAAE,iBAAiB;QAC3B,IAAI,EAAE;YACJ,OAAO,EAAE,iBAAiB;YAC1B,MAAM,EAAE,cAAc;SACvB;KACF,CAAC;qCAE+B,YAAY;QACX,UAAU;QACZ,SAAS;GAH5B,aAAa,CAMzB;SANY,aAAa;AAQ1B,oEAAoE;AAQpE,IAAa,OAAO;IAClB,iBAAoB,SAAuB,EACvB,UAAsB,EACtB,QAAmB;QAFnB,cAAS,GAAT,SAAS,CAAc;QACvB,eAAU,GAAV,UAAU,CAAY;QACtB,aAAQ,GAAR,QAAQ,CAAW;QACrC,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,UAAU,CAAC,aAAa,EAAE,gBAAc,SAAS,CAAC,IAAM,CAAC,CAAC;IACnF,CAAC;IACH,cAAC;AAAD,CAAC,AAND,IAMC;AANY,OAAO;IAPnB,SAAS,CAAC;QACT,QAAQ,EAAE,UAAU;QACpB,IAAI,EAAE;YACJ,OAAO,EAAE,UAAU;YACnB,MAAM,EAAE,UAAU;SACnB;KACF,CAAC;qCAE+B,YAAY;QACX,UAAU;QACZ,SAAS;GAH5B,OAAO,CAMnB;SANY,OAAO","sourcesContent":["import {ContentChild, Directive, ElementRef, Input, Renderer2, TemplateRef} from '@angular/core';\r\n\r\n/**\r\n * Cell definition for a CDK data-table.\r\n * Captures the template of a column's data row cell as well as cell-specific properties.\r\n */\r\n@Directive({selector: '[cdkCellDef]'})\r\nexport class CdkCellDef {\r\n  constructor(public template: TemplateRef<any>) { }\r\n}\r\n\r\n/**\r\n * Header cell definition for a CDK data-table.\r\n * Captures the template of a column's header cell and as well as cell-specific properties.\r\n */\r\n@Directive({selector: '[cdkHeaderCellDef]'})\r\nexport class CdkHeaderCellDef {\r\n  constructor(public template: TemplateRef<any>) { }\r\n}\r\n\r\n/**\r\n * Column definition for the CDK data-table.\r\n * Defines a set of cells available for a table column.\r\n */\r\n@Directive({selector: '[cdkColumnDef]'})\r\nexport class CdkColumnDef {\r\n  @Input('cdkColumnDef') name: string;\r\n\r\n  @ContentChild(CdkCellDef) cell: CdkCellDef;\r\n  @ContentChild(CdkHeaderCellDef) headerCell: CdkHeaderCellDef;\r\n}\r\n\r\n/** Header cell template container that adds the right classes and role. */\r\n@Directive({\r\n  selector: 'cdk-header-cell',\r\n  host: {\r\n    'class': 'cdk-header-cell',\r\n    'role': 'columnheader',\r\n  },\r\n})\r\nexport class CdkHeaderCell {\r\n  constructor(private columnDef: CdkColumnDef,\r\n              private elementRef: ElementRef,\r\n              private renderer: Renderer2) {\r\n    this.renderer.addClass(elementRef.nativeElement, `cdk-column-${columnDef.name}`);\r\n  }\r\n}\r\n\r\n/** Cell template container that adds the right classes and role. */\r\n@Directive({\r\n  selector: 'cdk-cell',\r\n  host: {\r\n    'class': 'cdk-cell',\r\n    'role': 'gridcell',\r\n  },\r\n})\r\nexport class CdkCell {\r\n  constructor(private columnDef: CdkColumnDef,\r\n              private elementRef: ElementRef,\r\n              private renderer: Renderer2) {\r\n    this.renderer.addClass(elementRef.nativeElement, `cdk-column-${columnDef.name}`);\r\n  }\r\n}\r\n"]}