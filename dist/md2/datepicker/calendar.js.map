{"version":3,"file":"calendar.js","sourceRoot":"","sources":["../../../src/lib/datepicker/calendar.ts"],"names":[],"mappings":"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","sourcesContent":["import {\r\n  AfterContentInit,\r\n  ChangeDetectionStrategy,\r\n  Component,\r\n  ElementRef,\r\n  EventEmitter,\r\n  Inject,\r\n  Input,\r\n  NgZone,\r\n  Optional,\r\n  Output,\r\n  ViewEncapsulation\r\n} from '@angular/core';\r\nimport {\r\n  DOWN_ARROW,\r\n  END,\r\n  ENTER,\r\n  HOME,\r\n  LEFT_ARROW,\r\n  PAGE_DOWN,\r\n  PAGE_UP,\r\n  RIGHT_ARROW,\r\n  UP_ARROW\r\n} from '../core/keyboard/keycodes';\r\nimport { DateAdapter } from '../core/datetime/index';\r\nimport { Md2DatepickerIntl } from './datepicker-intl';\r\nimport { MD_DATE_FORMATS, MdDateFormats } from '../core/datetime/date-formats';\r\nimport { MATERIAL_COMPATIBILITY_MODE } from '../core';\r\n\r\n\r\n/**\r\n * A calendar that is used as part of the datepicker.\r\n * @docs-private\r\n */\r\n@Component({\r\n  moduleId: module.id,\r\n  selector: 'md2-calendar',\r\n  templateUrl: 'calendar.html',\r\n  styleUrls: ['calendar.css'],\r\n  host: {\r\n    '[class.md2-calendar]': 'true',\r\n  },\r\n  encapsulation: ViewEncapsulation.None,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class Md2Calendar<D> implements AfterContentInit {\r\n  /** A date representing the period (month or year) to start the calendar in. */\r\n  @Input() startAt: D;\r\n\r\n  /** Whether the calendar should be started in month or year view. */\r\n  @Input() startView: 'time' | 'month' | 'year' = 'month';\r\n\r\n  /** The currently selected date. */\r\n  @Input() selected: D;\r\n\r\n  /** The minimum selectable date. */\r\n  @Input() minDate: D;\r\n\r\n  /** The maximum selectable date. */\r\n  @Input() maxDate: D;\r\n\r\n  /** A function used to filter which dates are selectable. */\r\n  @Input() dateFilter: (date: D) => boolean;\r\n\r\n  /** Emits when the currently selected date changes. */\r\n  @Output() selectedChange = new EventEmitter<D>();\r\n\r\n  /** Date filter for the month and year views. */\r\n  _dateFilterForViews = (date: D) => {\r\n    return !!date &&\r\n      (!this.dateFilter || this.dateFilter(date)) &&\r\n      (!this.minDate || this._dateAdapter.compareDate(date, this.minDate) >= 0) &&\r\n      (!this.maxDate || this._dateAdapter.compareDate(date, this.maxDate) <= 0);\r\n  }\r\n\r\n  /**\r\n   * The current active date. This determines which time period is shown and which date is\r\n   * highlighted when using keyboard navigation.\r\n   */\r\n  get _activeDate(): D { return this._clampedActiveDate; }\r\n  set _activeDate(value: D) {\r\n    this._clampedActiveDate = this._dateAdapter.clampDate(value, this.minDate, this.maxDate);\r\n  }\r\n  private _clampedActiveDate: D;\r\n\r\n  /** Whether the calendar is in month view. */\r\n  _currentView: 'time' | 'month' | 'year' = 'month';\r\n  _clockView: 'hour' | 'minute' = 'hour';\r\n\r\n  /** The label for the current calendar view. */\r\n  get _yearText(): string {\r\n    return this._dateAdapter.getYearName(this._activeDate);\r\n  }\r\n\r\n  get _dateText(): string {\r\n    return this._dateAdapter.getISODateString(this._activeDate);\r\n  }\r\n\r\n  get _periodButtonText(): string {\r\n    return this._currentView === 'month' ?\r\n      this._dateAdapter.format(this._activeDate, this._dateFormats.display.monthYearLabel)\r\n        .toLocaleUpperCase() :\r\n      this._dateAdapter.getYearName(this._activeDate);\r\n  }\r\n\r\n  get _periodButtonLabel(): string {\r\n    return this._currentView === 'month' ? this._intl.switchToYearViewLabel : this._intl.switchToMonthViewLabel;\r\n  }\r\n\r\n  /** The label for the the previous button. */\r\n  get _prevButtonLabel(): string {\r\n    return this._currentView === 'month' ? this._intl.prevMonthLabel : this._intl.prevYearLabel;\r\n  }\r\n\r\n  /** The label for the the next button. */\r\n  get _nextButtonLabel(): string {\r\n    return this._currentView === 'month' ? this._intl.nextMonthLabel : this._intl.nextYearLabel;\r\n  }\r\n\r\n  get _okButtonLabel(): string {\r\n    return 'OK';\r\n  }\r\n\r\n  get _cancelButtonLabel(): string {\r\n    return 'CANCEL';\r\n  }\r\n\r\n  constructor(private _elementRef: ElementRef,\r\n    private _intl: Md2DatepickerIntl,\r\n    private _ngZone: NgZone,\r\n    @Optional() private _dateAdapter: DateAdapter<D>,\r\n    @Optional() @Inject(MD_DATE_FORMATS) private _dateFormats: MdDateFormats) {\r\n    if (!this._dateAdapter) {\r\n      throw Error('DateAdapter');\r\n    }\r\n    if (!this._dateFormats) {\r\n      throw Error('MD_DATE_FORMATS');\r\n    }\r\n  }\r\n\r\n  ngAfterContentInit() {\r\n    this._activeDate = this.startAt || this._dateAdapter.today();\r\n    this._focusActiveCell();\r\n    this._currentView = this.startView || 'month';\r\n  }\r\n\r\n  /** Handles date selection in the month view. */\r\n  _dateSelected(date: D): void {\r\n    if (!this._dateAdapter.sameDate(date, this.selected)) {\r\n      this.selectedChange.emit(date);\r\n    }\r\n  }\r\n\r\n  /** Handles month selection in the year view. */\r\n  _monthSelected(month: D): void {\r\n    this._activeDate = month;\r\n    this._currentView = 'month';\r\n  }\r\n\r\n  _timeSelected(time: D): void {\r\n    this._activeDate = time;\r\n    this._currentView = 'month';\r\n  }\r\n\r\n  /** Handles user clicks on the period label. */\r\n  _currentPeriodClicked(): void {\r\n    this._currentView = this._currentView === 'month' ? 'year' : 'month';\r\n  }\r\n\r\n  _okButtonClicked(): void {\r\n    this._currentView = this._currentView === 'month' ? 'time' : 'month';\r\n  }\r\n\r\n  /** Handles user clicks on the previous button. */\r\n  _previousClicked(): void {\r\n    this._activeDate = this._currentView === 'month' ?\r\n      this._dateAdapter.addCalendarMonths(this._activeDate, -1) :\r\n      this._dateAdapter.addCalendarYears(this._activeDate, -1);\r\n  }\r\n\r\n  /** Handles user clicks on the next button. */\r\n  _nextClicked(): void {\r\n    this._activeDate = this._currentView === 'month' ?\r\n      this._dateAdapter.addCalendarMonths(this._activeDate, 1) :\r\n      this._dateAdapter.addCalendarYears(this._activeDate, 1);\r\n  }\r\n\r\n  /** Whether the previous period button is enabled. */\r\n  _previousEnabled(): boolean {\r\n    if (!this.minDate) {\r\n      return true;\r\n    }\r\n    return !this.minDate || !this._isSameView(this._activeDate, this.minDate);\r\n  }\r\n\r\n  /** Whether the next period button is enabled. */\r\n  _nextEnabled(): boolean {\r\n    return !this.maxDate || !this._isSameView(this._activeDate, this.maxDate);\r\n  }\r\n\r\n  /** Handles keydown events on the calendar body. */\r\n  _handleCalendarBodyKeydown(event: KeyboardEvent): void {\r\n    // TODO(mmalerba): We currently allow keyboard navigation to disabled dates, but just prevent\r\n    // disabled ones from being selected. This may not be ideal, we should look into whether\r\n    // navigation should skip over disabled dates, and if so, how to implement that efficiently.\r\n    if (this._currentView === 'month') {\r\n      this._handleCalendarBodyKeydownInMonthView(event);\r\n    } else {\r\n      this._handleCalendarBodyKeydownInYearView(event);\r\n    }\r\n  }\r\n\r\n  /** Focuses the active cell after the microtask queue is empty. */\r\n  _focusActiveCell() {\r\n    this._ngZone.runOutsideAngular(() => this._ngZone.onStable.first().subscribe(() => {\r\n      let activeEl = this._elementRef.nativeElement.querySelector('.md2-calendar-body-active');\r\n      activeEl.focus();\r\n    }));\r\n  }\r\n\r\n  /** Whether the two dates represent the same view in the current view mode (month or year). */\r\n  private _isSameView(date1: D, date2: D): boolean {\r\n    return this._currentView === 'month' ?\r\n      this._dateAdapter.getYear(date1) == this._dateAdapter.getYear(date2) &&\r\n      this._dateAdapter.getMonth(date1) == this._dateAdapter.getMonth(date2) :\r\n      this._dateAdapter.getYear(date1) == this._dateAdapter.getYear(date2);\r\n  }\r\n\r\n  /** Handles keydown events on the calendar body when calendar is in month view. */\r\n  private _handleCalendarBodyKeydownInMonthView(event: KeyboardEvent): void {\r\n    switch (event.keyCode) {\r\n      case LEFT_ARROW:\r\n        this._activeDate = this._dateAdapter.addCalendarDays(this._activeDate, -1);\r\n        break;\r\n      case RIGHT_ARROW:\r\n        this._activeDate = this._dateAdapter.addCalendarDays(this._activeDate, 1);\r\n        break;\r\n      case UP_ARROW:\r\n        this._activeDate = this._dateAdapter.addCalendarDays(this._activeDate, -7);\r\n        break;\r\n      case DOWN_ARROW:\r\n        this._activeDate = this._dateAdapter.addCalendarDays(this._activeDate, 7);\r\n        break;\r\n      case HOME:\r\n        this._activeDate = this._dateAdapter.addCalendarDays(this._activeDate,\r\n          1 - this._dateAdapter.getDate(this._activeDate));\r\n        break;\r\n      case END:\r\n        this._activeDate = this._dateAdapter.addCalendarDays(this._activeDate,\r\n          (this._dateAdapter.getNumDaysInMonth(this._activeDate) -\r\n            this._dateAdapter.getDate(this._activeDate)));\r\n        break;\r\n      case PAGE_UP:\r\n        this._activeDate = event.altKey ?\r\n          this._dateAdapter.addCalendarYears(this._activeDate, -1) :\r\n          this._dateAdapter.addCalendarMonths(this._activeDate, -1);\r\n        break;\r\n      case PAGE_DOWN:\r\n        this._activeDate = event.altKey ?\r\n          this._dateAdapter.addCalendarYears(this._activeDate, 1) :\r\n          this._dateAdapter.addCalendarMonths(this._activeDate, 1);\r\n        break;\r\n      case ENTER:\r\n        if (this._dateFilterForViews(this._activeDate)) {\r\n          this._dateSelected(this._activeDate);\r\n          // Prevent unexpected default actions such as form submission.\r\n          event.preventDefault();\r\n        }\r\n        return;\r\n      default:\r\n        // Don't prevent default or focus active cell on keys that we don't explicitly handle.\r\n        return;\r\n    }\r\n\r\n    this._focusActiveCell();\r\n    // Prevent unexpected default actions such as form submission.\r\n    event.preventDefault();\r\n  }\r\n\r\n  /** Handles keydown events on the calendar body when calendar is in year view. */\r\n  private _handleCalendarBodyKeydownInYearView(event: KeyboardEvent): void {\r\n    switch (event.keyCode) {\r\n      case LEFT_ARROW:\r\n        this._activeDate = this._dateAdapter.addCalendarMonths(this._activeDate, -1);\r\n        break;\r\n      case RIGHT_ARROW:\r\n        this._activeDate = this._dateAdapter.addCalendarMonths(this._activeDate, 1);\r\n        break;\r\n      case UP_ARROW:\r\n        this._activeDate = this._prevMonthInSameCol(this._activeDate);\r\n        break;\r\n      case DOWN_ARROW:\r\n        this._activeDate = this._nextMonthInSameCol(this._activeDate);\r\n        break;\r\n      case HOME:\r\n        this._activeDate = this._dateAdapter.addCalendarMonths(this._activeDate,\r\n          -this._dateAdapter.getMonth(this._activeDate));\r\n        break;\r\n      case END:\r\n        this._activeDate = this._dateAdapter.addCalendarMonths(this._activeDate,\r\n          11 - this._dateAdapter.getMonth(this._activeDate));\r\n        break;\r\n      case PAGE_UP:\r\n        this._activeDate =\r\n          this._dateAdapter.addCalendarYears(this._activeDate, event.altKey ? -10 : -1);\r\n        break;\r\n      case PAGE_DOWN:\r\n        this._activeDate =\r\n          this._dateAdapter.addCalendarYears(this._activeDate, event.altKey ? 10 : 1);\r\n        break;\r\n      case ENTER:\r\n        this._monthSelected(this._activeDate);\r\n        break;\r\n      default:\r\n        // Don't prevent default or focus active cell on keys that we don't explicitly handle.\r\n        return;\r\n    }\r\n\r\n    this._focusActiveCell();\r\n    // Prevent unexpected default actions such as form submission.\r\n    event.preventDefault();\r\n  }\r\n\r\n  /**\r\n   * Determine the date for the month that comes before the given month in the same column in the\r\n   * calendar table.\r\n   */\r\n  private _prevMonthInSameCol(date: D): D {\r\n    // Determine how many months to jump forward given that there are 2 empty slots at the beginning\r\n    // of each year.\r\n    let increment = this._dateAdapter.getMonth(date) <= 4 ? -5 :\r\n      (this._dateAdapter.getMonth(date) >= 7 ? -7 : -12);\r\n    return this._dateAdapter.addCalendarMonths(date, increment);\r\n  }\r\n\r\n  /**\r\n   * Determine the date for the month that comes after the given month in the same column in the\r\n   * calendar table.\r\n   */\r\n  private _nextMonthInSameCol(date: D): D {\r\n    // Determine how many months to jump forward given that there are 2 empty slots at the beginning\r\n    // of each year.\r\n    let increment = this._dateAdapter.getMonth(date) <= 4 ? 7 :\r\n      (this._dateAdapter.getMonth(date) >= 7 ? 5 : 12);\r\n    return this._dateAdapter.addCalendarMonths(date, increment);\r\n  }\r\n}\r\n"]}